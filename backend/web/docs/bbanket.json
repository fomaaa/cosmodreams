{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger cosmodreams api",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "ibortsov-dev@yandex.ru"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "cosmodreams.localhost",
  "basePath": "/api",
  "tags": [
    {
      "name": "auth",
      "description": "Методы для работы с авторизацией"
    },
    {
      "name": "data",
      "description": "Методы получения данных"
    },
    {
      "name": "company",
      "description": "Методы для получние информации о партнере"
    },
    {
      "name": "order",
      "description": "Методы для работы с заказами"
    },
    {
      "name": "users",
      "description": "Методы для работы с клиентами"
    },
    {
      "name": "menu",
      "description": "Методы для работы с меню партнера"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/token": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Получения первичного токена авторизации",
        "description": "В ответ вернется token и срок его жизни. Полученый токен будет использоваться для дальнейшей авторизации методом login.",
        "operationId": "token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema":{
              "type" : "object",
              "required" : "client_secret",
              "properties" : {
                "client_secret" : {
                  "type" : "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "403": {
            "description": "Access denied"
          },
          "405": {
            "description": "Method Not Allowed"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Авторизация пользователя",
        "description": "Авторизация пользователя, путем получение токена авторизации",
        "operationId": "login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema":{
              "type" : "object",
              "required" : "login",
              "properties" : {
                "login" : {
                  "type" : "string"
                },
                "login_token" : {
                  "type" : "string"
                },
                "device_id" : {
                  "type" : "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "403": {
            "description": "Access denied"
          },
          "422": {
            "description": "Validation error"
          },
          "405": {
            "description": "Method Not Allowed"
          }
        }
      }
    },
    "/company/{id_bb}": {
      "get": {
        "tags": [
          "company"
        ],
        "summary": "Получние данных о партнере",
        "operationId": "id_bb",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_bb",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Company"
              }
            }
          },
          "404": {
            "description": "Company not found"
          },
          "405": {
            "description": "Method Not Allowed"
          }
        }
      }
    },
    "/get-content-data": {
      "get": {
        "tags": [
          "data"
        ],
        "summary": "Получение информации для загрузки приложения",
        "description": "",
        "operationId": "data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "schema":{
              "type" : "string",
              "required" : true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method Not Allowed"
          }
        }
      }
    },
    "/order": {
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Добавление заказа",
        "description": " address - можно указать существующий id адреса клиента, можно объект модели Address, для создания нового. При передаче нового телефона пользователя, в ответ прийдет код подтверждения",
        "operationId": "createOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "error": {
                "field": [
                  "Error #1",
                  "Error #2"
                ]
              }
            }
          },
          "405": {
            "description": "Method Not Allowed"
          }
        }
      }
    },
    "/order/repeat/{order_id}": {
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Повторение заказа, при неакутальной комплектакции в массиве details вернется список id неактуальных блюд,",
        "description": "",
        "operationId": "repeatOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Получение информации о клиенте, при expand=orders выдает список заказов клиента ",
        "description": "",
        "operationId": "getOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "expand",
            "in": "query",
            "type": "string",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "405": {
            "description": "Method Not Allowed"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Изменение данных пользователя",
        "description": "Обновлены будут только переданные поля! При передаче поля phone, повторно будет послано sms с кодом, в теле ответа поле code",
        "operationId": "updateClient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "error": {
                "field": [
                  "Error #1",
                  "Error #2"
                ]
              }
            }
          },
          "405": {
            "description": "Method Not Allowed"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Регистрация клиента",
        "description": "Для создания, достаточно передать id_bb, phone. В ответе вернутся поле code с проверочным цифрыми, для метода check",
        "operationId": "createClient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "error": {
                "field": [
                  "Error #1",
                  "Error #2"
                ]
              }
            }
          },
          "405": {
            "description": "Method Not Allowed"
          }
        }
      }
    },
    "/user/check": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Проверка кода мобильного телефона",
        "description": "",
        "operationId": "CheckClient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "description": "id клиента",
            "in": "query"
          },
          {
            "name": "code",
            "type": "string",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "User not found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Code not actual"
          }
        }
      }
    },
    "/user/address": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Добавление адреса пользователя",
        "description": "",
        "operationId": "createAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "Address not found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Code not actual"
          }
        }
      }
    },
    "/user/address/{id}": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Изменение адреса пользователя",
        "description": "",
        "operationId": "editAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Address"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "error": {
                "field": [
                  "Error #1",
                  "Error #2"
                ]
              }
            }
          },
          "405": {
            "description": "Method Not Allowed"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Удаление адреса пользователя",
        "description": "",
        "operationId": "deleteAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "id адресса"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "Address not found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "422": {
            "description": "Code not actual"
          }
        }
      }
    },
    "/menu/{id_bb}": {
      "get": {
        "tags": [
          "menu"
        ],
        "summary": "Получние меню партнера, expand=dishes расширяет метод блюдами из категорий. category=categody_id - получение списка блюд категории",
        "operationId": "getDishes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id_bb",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "expand",
            "type": "string",
            "in": "query"
          },
          {
            "name": "category",
            "type": "string",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "Menu not found"
          },
          "405": {
            "description": "Method Not Allowed"
          }
        }
      }
    }
  },
  "definitions": {
    "Company": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "id_bb": {
          "type": "integer",
          "format": "int64"
        },
        "domains": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "enum": [
            "0",
            "1"
          ],
          "default": 1
        },
        "color": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "whatsup": {
          "type": "string"
        },
        "cash": {
          "type": "boolean",
          "default": true
        },
        "card": {
          "type": "boolean",
          "default": false
        },
        "card_description": {
          "type": "string"
        },
        "cash_description": {
          "type": "string"
        },
        "min_price": {
          "type": "integer"
        },
        "delivery_price": {
          "type": "integer"
        },
        "delivery_time": {
          "type": "string"
        },
        "delivery_condition": {
          "type": "string",
          "description": "Объект c временем дсотавки по дням недели"
        },
        "description": {
          "type": "text",
          "description": "Условия доставки для клиента"
        },
        "btn_text": {
          "type": "text",
          "description": "Текст кнопки"
        }
      },
      "xml": {
        "name": "Partners"
      }
    },
    "Order": {
      "type": "object",
      "required": [
        "id",
        "id_bb",
        "client_id",
        "address",
        "partner_address",
        "items",
        "delivery_at"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Внутренний id заказа в системе"
        },
        "id_bb": {
          "type": "integer",
          "format": "int64",
          "description": "id партенра"
        },
        "client_id": {
          "type": "integer",
          "format": "int64",
          "description": "id клиента"
        },
        "number": {
          "type": "string",
          "description": "Номер заказа"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "delivery_at": {
          "type": "string",
          "format": "date-time",
          "description": "Доставить ко времени"
        },
        "type": {
          "type": "integer",
          "enum": [
            "0",
            "1"
          ],
          "description": "0 - Самовывоз, 1 - Доставка"
        },
        "address": {
          "xml": {
            "name": "Address"
          },
          "$ref": "#/definitions/Address",
          "description": "Адрес клиента"
        },
        "partner_address": {
          "xml": {
            "name": "partnerAddress"
          },
          "$ref": "#/definitions/PartnerAddress",
          "description": "Адрес ресторана"
        },
        "items": {
          "xml": {
            "name": "items"
          },
          "$ref": "#/definitions/Items",
          "description": "Комплектация заказа"
        },
        "status": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "2",
            "3",
            "4"
          ],
          "description": "0 - Новый, 1 -В процессе, 2 - в пути, 3 - доставлен, 4 отменен"
        },
        "name": {
          "type": "string",
          "description": "Имя клиента"
        },
        "phone": {
          "type": "string"
        },
        "sum": {
          "type": "integer",
          "format": "double"
        },
        "payment": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "2"
          ],
          "description": "0 - наличные, 1- картой курьеру, 2 - оплата онлайн"
        },
        "return_sum": {
          "type": "string",
          "default": false,
          "description": "Сдача с суммы"
        },
        "appliances": {
          "type": "integer",
          "format": "int64",
          "default": 1,
          "description": "Количество приборов"
        },
        "cancel_reason": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "cid": {
          "type": "string"
        },
        "ym_uid": {
          "type": "string"
        },
        "ua": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "Items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "order_id": {
          "type": "integer",
          "format": "int64"
        },
        "dish_id": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "string"
        },
        "actual_price": {
          "type": "integer",
          "format": "double"
        }
      },
      "xml": {
        "name": "Items"
      }
    },
    "PartnerAddress": {
      "type": "object",
      "required": [
        "id_bb",
        "address"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "id_bb": {
          "type": "integer",
          "format": "int64"
        },
        "address": {
          "type": "string"
        },
        "pickup_time": {
          "type": "integer",
          "description": " Среднее время от заказа до подачи клиенту"
        },
        "pickup_range": {
          "type": "string",
          "description": "Объект с расписанием работы по часам"
        },
        "pickup_condition": {
          "type": "string",
          "description": "Условия самовывоза"
        },
        "y_link": {
          "type": "string",
          "description": "Ссылка на яндекс карту"
        }
      },
      "xml": {
        "name": "PartnerAddress"
      }
    },
    "Address": {
      "type": "object",
      "required": [
        "id_bb",
        "address",
        "client_id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "id_bb": {
          "type": "integer",
          "format": "int64"
        },
        "client_id": {
          "type": "integer",
          "format": "int64"
        },
        "address": {
          "type": "string"
        },
        "intercom": {
          "type": "string"
        },
        "porch": {
          "type": "string"
        },
        "floor": {
          "type": "string"
        },
        "flat": {
          "type": "string"
        },
        "is_main": {
          "type": "integer",
          "format": "int64"
        },
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "Items"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "id_bb": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "approved_at": {
          "type": "string",
          "format": "date-time"
        },
        "userStatus": {
          "type": "integer",
          "enum": [
            "0",
            "1",
            "2"
          ],
          "description": "0 - Не подтвержден, 1 - Подтвержден, 2 - Заблокирован"
        },
        "address": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          },
          "xml": {
            "name": "Address"
          },
          "description": "Адреса клиента"
        },
        "orders": {
          "type": "integer",
          "description": "Количество заказов, при expand параметре, объект с заказами клиента"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Dishes": {
      "type": "object",
      "required": [
        "id_bb",
        "category",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "id_bb": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "xml": {
            "name": "category"
          },
          "$ref": "#/definitions/Category",
          "description": "Категория"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "format": "int64"
        },
        "images": {
          "type": "json"
        },
        "is_active": {
          "type": "boolean",
          "default": "true"
        }
      },
      "xml": {
        "name": "Dishes"
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "id_bb": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    }
  }
}
